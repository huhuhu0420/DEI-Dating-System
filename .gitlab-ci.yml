stages:
  - test
  - e2e

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

cache:
  paths:
    - .m2/repository # Cache Maven dependencies
    - target # Cache build outputs

# Test stage
unit_tests:
  stage: test
  image: maven:3.9.9-eclipse-temurin-23
  script:
    - mvn clean test jacoco:report
  artifacts:
    paths:
      - target/surefire-reports
      - target/site/jacoco
    expire_in: 1 week
  only:
    - master
    - develop
    - merge_requests

jacoco_coverage:
  stage: test
  image: maven:3.9.9-eclipse-temurin-23
  script:
    - mvn -Pjacoco test jacoco:report
  artifacts:
    paths:
      - target/site/jacoco
    expire_in: 1 week
  only:
    - master
    - develop
    - merge_requests

e2e_tests:
  stage: e2e
  image: docker:20.10.16
  services:
    - name: docker:20.10.16-dind
      alias: docker
      command: ["--tls=false"]
  variables:
  variables:
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
    PYTHON_VERSION: "3.9"
    NEWMAN_VERSION: "5.3.2"
  before_script:
    - until docker info; do echo "Waiting for docker to be ready..."; sleep 1; done
    # Install required tools
    - apk add --no-cache python3 py3-pip docker-compose nodejs npm
    # Install Newman (Postman CLI)
    - npm install -g newman@${NEWMAN_VERSION}
    # Install Python dependencies
    - pip3 install --cache-dir=.pip-cache pytest requests
  script:
    # Start services using Docker Compose
    - docker-compose up --build -d
    # check if the services are up and running
    - docker-compose ps
    # Run mock data
    - python3 ./src/main/resources/request.py
    # Run Postman collections
    - newman run ./src/main/resources/dei.postman_collection.json
  after_script:
    # Cleanup
    - docker-compose down
  artifacts:
    paths:
      - target/surefire-reports
    when: always
    expire_in: 1 week
  cache:
    paths:
      - .pip-cache/
  only:
    - master
    - develop
    - merge_requests
